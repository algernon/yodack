.TH "YODACK" "1" "2012-09-28" "yodack" "Ye Olde Debian Archive Control Kit Manual"
.ad l
.nh
.SH "NAME"
yodack \- Ye Olde Debian Archive Control Kit
.SH "SYNOPSIS"
.BI "yodack " ftp\-master " dm " example@org " keyring " keyring.gpg " allow " "this that" " deny " something\-else

.BI "yodack at " ftp\-master " for dm " example@org " in keyring " keyring.gpg " allow upload of package " "this, that" ", but deny uploading " something\-else.

.SH "DESCRIPTION"
Ye Olde Debian Archive Control Kit (or \fByodack\fR for short) is a
simple tool to assist the young apprentice in commanding the \fIDAK\fR
side of the archive.

With this tool, one can easily construct command files, as understood
by the most recent \fIDAK\fRs, and upload them to the appropriate
place.

.SH "OPTIONS"

\fBYodack\fR understands some limited set of english, but is picky on
the order. One should start every sentence by telling the tool which
archive one wants to give commands to, followed by an action to take
on said archive, then the actions commands.

One can of course issue multiple actions, to multiple archives
too. Just make sure to finish the sentence with a dot.

As of now, \fBYodack\fR only recognises a single action, and while it
will not yell when it finds any other, the arguments for any action
not documented herein are ignored. All actions \- known or not \- will
end up being sent, however.

.IP "\fBdm\fR \fIkey\-id\fR \fBallow\fR \fIpackages...\fR \fBdeny\fR \fIpackages...\fR"
Grant or revoke access to a particular Debian Maintainer (identified
by the \fIkey\-id\fR) on the listed packages.

The maintainer will be looked up in the Debian Maintainer keyring by default
if an alternative keyring is specified via the \fBkeyring\fR option, and
Yodack will ask for verification - or complain, if there is more than
one match. Yodack does not like to choose, it wants the young
apprentices to make their own choices.

The \fBdebian\-maintainer\fR and \fBdebian maintainer\fR aliases can
also be used in place of \fBdm\fR.

.SH "EXAMPLES"

.IP "\fByodack\fR \fIftp\-master\fR \fBdm\fR \fIDEADBEEF\fR \fBallow\fR \fIhello\fR \fBdeny\fR \fIgoodbye\fR"

In the simplest case, with no filler text, this translates to allowing
the maintainer identified by the key \fIDEADBEEF\fR to upload the
package \fIhello\fR, but forbid him from uploading the \fIgoodbye\fR
package \- all this on the \fIftp\-master\fR archive.

.IP "\fByodack\fR on \fIftp\-master\fR for \fBdm\fR \fIDEADBEEF\fR, please \fBallow\fR uploads of \fIhello\fR, but \fBdeny\fR uploading \fIgoodbye\fR."

This does exactly the same as the previous one, but has a few filler
words littered accross the command line to please master Yodack.

.IP "\fByodack\fR \fIftp\-master\fR \fBdm\fR \fIDEADBEEF\fR \fBallow\fR \fIhello\fR \fBdeny\fR \fIgoodbye\fR. \fBdm\fR \fIC0FFEE\fR \fBallow\fR \fIhello\-debhelper\fR."

While doing the same as the previous two examples, this one will also
grant other permissions to another maintainer.

.SH "CONFIGURATION"

Being a master, Yodack takes a fairly unsophistic approach to
configuration: it simply sources a set of files (see later), which can
implement new functionalities, in plain old POSIX shell.

In particular, yodack does not, by default, know how to upload the
signed command files. It relies on the configuration to implement the
functions that do the actual task. This is done by requiring the
upload functions to have a specific name, derived from the archive to
upload to: every non-alphanumeric character in the archive's name gets
replaced by an underscore, and \fIyodack_upload_to_\fR gets prepended
to it \- the result will be the function Yodack will attempt to call,
with the single argument being the full path to the file to upload.

If the function does not exist, Yodack will complain.

For example, to upload to \fIftp\-master.debian.org\fR, one will need
a function called \fIyodack_upload_to_ftp_master_debian_org\fR, which
just happens to be implemented by the default configuration file.

.SH "ENVIRONMENT"

.PP
\fIUSER\fR
.RS 4
The \fIUSER\fR environment variable is used to construct the filename
that will end up being uploaded in the end. The dak side expects files
in the \fIlogin\fR\-\fI$(date +%s)\fR format, this environment
variable is used for the first part.
.RE

.PP
\fIDEBEMAIL\fR, \fIEMAIL\fR, \fIDEBFULLNAME\fR, \fINAME\fR
.RS 4
Used for constructing the optional \fIUploader\fR field for the
e\-mail and full name, respectively.
.RE

.PP
\fIDEBSIGN_KEYID\fR
.RS 4
Specify the key ID to be used for signing.
.RE

.PP
\fIYODACK_CONF\fR
.RS 4
In case one would like to specify an alternate configuration file,
yodack will also source the file given in this environment variable,
right after the two standard files \- if it exists.
.RE

.SH "FILES"

.PP
\fB/etc/yodack.conf\fR
.RS 4
The global configuration file, implementing upload targets available
for all users.
.RE

.PP
\fB~/.yodack.conf\fR
.RS 4
Per-user configuration file, where system-wide defaults can be
overridden, and new upload targets can be implemented.
.RE

.SH "AUTHOR"
Yodack is copyright \(co 2012 by Gergely Nagy <algernon@debian.org>.
